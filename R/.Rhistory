lines(x=1:2000,y=my.running(as.numeric(colMeans(all.niche.points@data)), fun=mean, width=21, align=align, pad=T), col="black", lwd=1.5,lend=0, ljoin=0)
# lines(x=1:2000,y=my.running(as.numeric(colMeans(all.niche.points@data)), fun=mean, width=101, align=align, pad=T), col=level.colors[5], lwd=2,lend=0, ljoin=0)
axis(1, at=c(1,seq(100,2000,100)), labels=c(1,seq(100,2000,100)))
axis(2)
mtext("Percent in niche", side=2, line=2.25)
par(mai=c(2,margins,2, 0.15), new=T, xpd=F)
align <- "center"
plot(1, type='n', ylim=c(0,1), xlim=c(0,2000), axes=F, xaxs='i', yaxs='i', xlab='', ylab='')
lines(x=strictly.local.niche.data[["YEAR"]],y=strictly.local.niche.data[["NICHE"]], col="gray70", lwd=0.25)
# lines(x=1:2000,y=my.running(as.numeric(colMeans(all.niche.points@data)), fun=mean, width=11, align=align, pad=T), col=level.colors[1], lwd=2,lend=0, ljoin=0)
lines(x=strictly.local.niche.data[["YEAR"]],y=my.running(strictly.local.niche.data[["NICHE"]], fun=mean, width=21, align=align, pad=T, na.rm=T), col="black", lwd=1.5,lend=0, ljoin=0)
# lines(x=1:2000,y=my.running(as.numeric(colMeans(all.niche.points@data)), fun=mean, width=101, align=align, pad=T), col=level.colors[5], lwd=2,lend=0, ljoin=0)
axis(1, at=c(1,seq(100,2000,100)), labels=c(1,seq(100,2000,100)))
axis(2)
mtext("Local percent in niche", side=2, line=2.25)
par(mai=c(margins,margins, 3.5, 0.15), new=T, xpd=F)
plot(1, type='n', ylim=c(0,max(densi)), xlim=c(1,2000), axes=F, xaxs='i', yaxs='i', xlab='', ylab='')
# barplot(counts, width=1, space=0, col=level.colors[c(2,4,6)], border=NA, xlim=c(0,2000), axes=F, xaxs='i', yaxs='i', xlab='', ylab='', add=T)
lines(x=1:2000,y=densi, col=level.colors[5], lwd=2,lend=0, ljoin=0,xpd=T)
par(lend=1)
# legend("topleft", legend=c(paste0("All dates\n(n = ",sum(counts[1:3,]),")"), paste0("Cutting & \nnear-cutting\n(n = ",sum(counts[1:2,]),")"),paste0("Cutting \ndates\n(n = ",sum(counts[1,]),")")), col=rev(level.colors[c(2,4,6)]), lwd=10, bty='n',y.intersp=2, cex=0.9)
# legend("topleft", legend=c("\n","\n\n","\n\n"), col=rev(level.colors[c(1,3,5)]), lwd=2, bty='n',y.intersp=2, cex=0.9)
par(lend=0)
axis(1, at=c(1,seq(100,2000,100)), labels=c(1,seq(100,2000,100)))
axis(2)
mtext("Number of dates", side=2, line=2.25)
mtext("Year AD", side=1, line=2.25)
par(mai=c(margins,margins,0.15,0.15), new=T, xpd=F)
plot(1, type='n', xaxs="i",yaxs="i", xlab="", ylab="", ylim=c(0,1),xlim=c(1,2000), axes=FALSE, main='')
abline(v=pueblo.period.breaks, lwd=1, lty=2)
text(x=diff(c(1,pueblo.period.breaks,2000))/2 + c(1,pueblo.period.breaks),y=par('usr')[4],labels=c("BMII","BMIII","PI","PII","PIII","PIV","Historic"),adj=c(0.5,0), xpd=T)
dev.off()
distill("../FIGURES/EVERYTHING.pdf")
# A final graph of the mean of the series through time, with a smoothing spline
quartz(file="../FIGURES/EVERYTHING.pdf", width=fig.width, height=fig.height, antialias=FALSE, bg="white", type='pdf', family="Gulim", pointsize=8, dpi=600)
par(bg='white',fg='black',col.lab='black', col.main='black', col.axis='black', family='Helvetica Bold', lend=0, ljoin=1)
par(mai=c(margins,margins,0.15,0.15))
plot(1, type='n', xaxs="i",yaxs="i", xlab="", ylab="", ylim=c(0,1),xlim=c(1,2000), axes=FALSE, main='')
# abline(v=pueblo.period.breaks, lwd=1, lty=2)
# text(x=diff(c(0,pueblo.period.breaks,2000))/2 + c(0,pueblo.period.breaks),y=par('usr')[4],labels=c("BMII","BMIII","PI","PII","PIII","PIV","Colonial"),adj=c(0.5,0.5), xpd=T)
par(mai=c(3.75,margins, 0.15, 0.15), new=T, xpd=F)
align <- "center"
plot(1, type='n', ylim=c(0,1), xlim=c(1,2000), axes=F, xaxs='i', yaxs='i', xlab='', ylab='')
lines(as.numeric(colMeans(all.niche.points@data)), col="gray70", lwd=0.25)
# lines(x=1:2000,y=my.running(as.numeric(colMeans(all.niche.points@data)), fun=mean, width=11, align=align, pad=T), col=level.colors[1], lwd=2,lend=0, ljoin=0)
lines(x=1:2000,y=my.running(as.numeric(colMeans(all.niche.points@data)), fun=mean, width=21, align=align, pad=T), col="black", lwd=1.5,lend=0, ljoin=0)
# lines(x=1:2000,y=my.running(as.numeric(colMeans(all.niche.points@data)), fun=mean, width=101, align=align, pad=T), col=level.colors[5], lwd=2,lend=0, ljoin=0)
axis(1, at=c(1,seq(100,2000,100)), labels=c(1,seq(100,2000,100)))
axis(2)
mtext("Percent in niche", side=2, line=2.25)
par(mai=c(2,margins,2, 0.15), new=T, xpd=F)
align <- "center"
plot(1, type='n', ylim=c(0,1), xlim=c(0,2000), axes=F, xaxs='i', yaxs='i', xlab='', ylab='')
lines(x=strictly.local.niche.data[["YEAR"]],y=strictly.local.niche.data[["NICHE"]], col="gray70", lwd=0.25)
# lines(x=1:2000,y=my.running(as.numeric(colMeans(all.niche.points@data)), fun=mean, width=11, align=align, pad=T), col=level.colors[1], lwd=2,lend=0, ljoin=0)
lines(x=strictly.local.niche.data[["YEAR"]],y=my.running(strictly.local.niche.data[["NICHE"]], fun=mean, width=21, align=align, pad=T, na.rm=T), col="black", lwd=1.5,lend=0, ljoin=0)
# lines(x=1:2000,y=my.running(as.numeric(colMeans(all.niche.points@data)), fun=mean, width=101, align=align, pad=T), col=level.colors[5], lwd=2,lend=0, ljoin=0)
axis(1, at=c(1,seq(100,2000,100)), labels=c(1,seq(100,2000,100)))
axis(2)
mtext("Local percent in niche", side=2, line=2.25)
par(mai=c(margins,margins, 3.5, 0.15), new=T, xpd=F)
plot(1, type='n', ylim=c(0,max(densi)), xlim=c(1,2000), axes=F, xaxs='i', yaxs='i', xlab='', ylab='')
# barplot(counts, width=1, space=0, col=level.colors[c(2,4,6)], border=NA, xlim=c(0,2000), axes=F, xaxs='i', yaxs='i', xlab='', ylab='', add=T)
lines(x=1:2000,y=densi, col=level.colors[5], lwd=2,lend=0, ljoin=0,xpd=T)
par(lend=1)
# legend("topleft", legend=c(paste0("All dates\n(n = ",sum(counts[1:3,]),")"), paste0("Cutting & \nnear-cutting\n(n = ",sum(counts[1:2,]),")"),paste0("Cutting \ndates\n(n = ",sum(counts[1,]),")")), col=rev(level.colors[c(2,4,6)]), lwd=10, bty='n',y.intersp=2, cex=0.9)
# legend("topleft", legend=c("\n","\n\n","\n\n"), col=rev(level.colors[c(1,3,5)]), lwd=2, bty='n',y.intersp=2, cex=0.9)
par(lend=0)
axis(1, at=c(1,seq(100,2000,100)), labels=c(1,seq(100,2000,100)))
axis(2)
mtext("Number of dates", side=2, line=2.25)
mtext("Year AD", side=1, line=2.25)
par(mai=c(margins,margins,0.15,0.15), new=T, xpd=F)
plot(1, type='n', xaxs="i",yaxs="i", xlab="", ylab="", ylim=c(0,1),xlim=c(1,2000), axes=FALSE, main='')
abline(v=pueblo.period.breaks, lwd=1, lty=2)
text(x=diff(c(1,pueblo.period.breaks,2000))/2 + c(1,pueblo.period.breaks),y=par('usr')[4],labels=c("BMII","BMIII","PI","PII","PIII","PIV","Historic"),adj=c(0.5,0), xpd=T)
dev.off()
distill("../FIGURES/EVERYTHING.pdf")
fig.width <- 4.75
fig.height <- 5.0
margins <- 0.41
between <- 0.25
# A final graph of the mean of the series through time, with a smoothing spline
quartz(file="../FIGURES/EVERYTHING.pdf", width=fig.width, height=fig.height, antialias=FALSE, bg="white", type='pdf', family="Gulim", pointsize=8, dpi=600)
par(bg='white',fg='black',col.lab='black', col.main='black', col.axis='black', family='Helvetica Bold', lend=0, ljoin=1)
par(mai=c(margins,margins,0.15,0.15))
plot(1, type='n', xaxs="i",yaxs="i", xlab="", ylab="", ylim=c(0,1),xlim=c(1,2000), axes=FALSE, main='')
# abline(v=pueblo.period.breaks, lwd=1, lty=2)
# text(x=diff(c(0,pueblo.period.breaks,2000))/2 + c(0,pueblo.period.breaks),y=par('usr')[4],labels=c("BMII","BMIII","PI","PII","PIII","PIV","Colonial"),adj=c(0.5,0.5), xpd=T)
par(mai=c(3.6,margins, 0.15, 0.15), new=T, xpd=F)
align <- "center"
plot(1, type='n', ylim=c(0,1), xlim=c(1,2000), axes=F, xaxs='i', yaxs='i', xlab='', ylab='')
lines(as.numeric(colMeans(all.niche.points@data)), col="gray70", lwd=0.25)
# lines(x=1:2000,y=my.running(as.numeric(colMeans(all.niche.points@data)), fun=mean, width=11, align=align, pad=T), col=level.colors[1], lwd=2,lend=0, ljoin=0)
lines(x=1:2000,y=my.running(as.numeric(colMeans(all.niche.points@data)), fun=mean, width=21, align=align, pad=T), col="black", lwd=1.5,lend=0, ljoin=0)
# lines(x=1:2000,y=my.running(as.numeric(colMeans(all.niche.points@data)), fun=mean, width=101, align=align, pad=T), col=level.colors[5], lwd=2,lend=0, ljoin=0)
axis(1, at=c(1,seq(100,2000,100)), labels=c(1,seq(100,2000,100)))
axis(2)
mtext("Percent in niche", side=2, line=2.25)
par(mai=c(1.8,margins,1.8, 0.15), new=T, xpd=F)
align <- "center"
plot(1, type='n', ylim=c(0,1), xlim=c(0,2000), axes=F, xaxs='i', yaxs='i', xlab='', ylab='')
lines(x=strictly.local.niche.data[["YEAR"]],y=strictly.local.niche.data[["NICHE"]], col="gray70", lwd=0.25)
# lines(x=1:2000,y=my.running(as.numeric(colMeans(all.niche.points@data)), fun=mean, width=11, align=align, pad=T), col=level.colors[1], lwd=2,lend=0, ljoin=0)
lines(x=strictly.local.niche.data[["YEAR"]],y=my.running(strictly.local.niche.data[["NICHE"]], fun=mean, width=21, align=align, pad=T, na.rm=T), col="black", lwd=1.5,lend=0, ljoin=0)
# lines(x=1:2000,y=my.running(as.numeric(colMeans(all.niche.points@data)), fun=mean, width=101, align=align, pad=T), col=level.colors[5], lwd=2,lend=0, ljoin=0)
axis(1, at=c(1,seq(100,2000,100)), labels=c(1,seq(100,2000,100)))
axis(2)
mtext("Local percent in niche", side=2, line=2.25)
par(mai=c(margins,margins, 3.6, 0.15), new=T, xpd=F)
plot(1, type='n', ylim=c(0,max(densi)), xlim=c(1,2000), axes=F, xaxs='i', yaxs='i', xlab='', ylab='')
# barplot(counts, width=1, space=0, col=level.colors[c(2,4,6)], border=NA, xlim=c(0,2000), axes=F, xaxs='i', yaxs='i', xlab='', ylab='', add=T)
lines(x=1:2000,y=densi, col=level.colors[5], lwd=2,lend=0, ljoin=0,xpd=T)
par(lend=1)
# legend("topleft", legend=c(paste0("All dates\n(n = ",sum(counts[1:3,]),")"), paste0("Cutting & \nnear-cutting\n(n = ",sum(counts[1:2,]),")"),paste0("Cutting \ndates\n(n = ",sum(counts[1,]),")")), col=rev(level.colors[c(2,4,6)]), lwd=10, bty='n',y.intersp=2, cex=0.9)
# legend("topleft", legend=c("\n","\n\n","\n\n"), col=rev(level.colors[c(1,3,5)]), lwd=2, bty='n',y.intersp=2, cex=0.9)
par(lend=0)
axis(1, at=c(1,seq(100,2000,100)), labels=c(1,seq(100,2000,100)))
axis(2)
mtext("Number of dates", side=2, line=2.25)
mtext("Year AD", side=1, line=2.25)
par(mai=c(margins,margins,0.15,0.15), new=T, xpd=F)
plot(1, type='n', xaxs="i",yaxs="i", xlab="", ylab="", ylim=c(0,1),xlim=c(1,2000), axes=FALSE, main='')
abline(v=pueblo.period.breaks, lwd=1, lty=2)
text(x=diff(c(1,pueblo.period.breaks,2000))/2 + c(1,pueblo.period.breaks),y=par('usr')[4],labels=c("BMII","BMIII","PI","PII","PIII","PIV","Historic"),adj=c(0.5,0), xpd=T)
dev.off()
distill("../FIGURES/EVERYTHING.pdf")
pueblo.period.breaks[c(-1,-6)]
diff(pueblo.period.breaks)
diff(pueblo.period.breaks)/2 + pueblo.period.breaks[-6]
fig.width <- 4.75
fig.height <- 5.0
margins <- 0.41
between <- 0.25
# A final graph of the mean of the series through time, with a smoothing spline
quartz(file="../FIGURES/EVERYTHING.pdf", width=fig.width, height=fig.height, antialias=FALSE, bg="white", type='pdf', family="Gulim", pointsize=8, dpi=600)
par(bg='white',fg='black',col.lab='black', col.main='black', col.axis='black', family='Helvetica Bold', lend=0, ljoin=1)
par(mai=c(margins,margins,0.15,0.15))
plot(1, type='n', xaxs="i",yaxs="i", xlab="", ylab="", ylim=c(0,1),xlim=c(500,1540), axes=FALSE, main='')
# abline(v=pueblo.period.breaks, lwd=1, lty=2)
# text(x=diff(c(0,pueblo.period.breaks,2000))/2 + c(0,pueblo.period.breaks),y=par('usr')[4],labels=c("BMII","BMIII","PI","PII","PIII","PIV","Colonial"),adj=c(0.5,0.5), xpd=T)
par(mai=c(3.6,margins, 0.15, 0.15), new=T, xpd=F)
align <- "center"
plot(1, type='n', ylim=c(0,1), xlim=c(500,1540), axes=F, xaxs='i', yaxs='i', xlab='', ylab='')
lines(as.numeric(colMeans(all.niche.points@data))[500:1540], col="gray70", lwd=0.25)
# lines(x=1:2000,y=my.running(as.numeric(colMeans(all.niche.points@data)), fun=mean, width=11, align=align, pad=T), col=level.colors[1], lwd=2,lend=0, ljoin=0)
lines(x=500:1540,y=my.running(as.numeric(colMeans(all.niche.points@data)), fun=mean, width=21, align=align, pad=T)[500:1540], col="black", lwd=1.5,lend=0, ljoin=0)
# lines(x=1:2000,y=my.running(as.numeric(colMeans(all.niche.points@data)), fun=mean, width=101, align=align, pad=T), col=level.colors[5], lwd=2,lend=0, ljoin=0)
axis(1, at=c(seq(500,1540,100),1540), labels=c(seq(500,1540,100),1540))
axis(2)
mtext("Percent in niche", side=2, line=2.25)
par(mai=c(1.8,margins,1.8, 0.15), new=T, xpd=F)
align <- "center"
plot(1, type='n', ylim=c(0,1), xlim=c(500,1540), axes=F, xaxs='i', yaxs='i', xlab='', ylab='')
lines(x=strictly.local.niche.data[["YEAR"]][500:1540],y=strictly.local.niche.data[["NICHE"]][500:1540], col="gray70", lwd=0.25)
# lines(x=1:2000,y=my.running(as.numeric(colMeans(all.niche.points@data)), fun=mean, width=11, align=align, pad=T), col=level.colors[1], lwd=2,lend=0, ljoin=0)
lines(x=strictly.local.niche.data[["YEAR"]][500:1540],y=my.running(strictly.local.niche.data[["NICHE"]], fun=mean, width=21, align=align, pad=T, na.rm=T)[500:1540], col="black", lwd=1.5,lend=0, ljoin=0)
# lines(x=1:2000,y=my.running(as.numeric(colMeans(all.niche.points@data)), fun=mean, width=101, align=align, pad=T), col=level.colors[5], lwd=2,lend=0, ljoin=0)
axis(1, at=c(seq(500,1540,100),1540), labels=c(seq(500,1540,100),1540))
axis(2)
mtext("Local percent in niche", side=2, line=2.25)
par(mai=c(margins,margins, 3.6, 0.15), new=T, xpd=F)
plot(1, type='n', ylim=c(0,max(densi[500:1540])), xlim=c(500,1540), axes=F, xaxs='i', yaxs='i', xlab='', ylab='')
# barplot(counts, width=1, space=0, col=level.colors[c(2,4,6)], border=NA, xlim=c(0,2000), axes=F, xaxs='i', yaxs='i', xlab='', ylab='', add=T)
lines(x=500:1540,y=densi[500:1540], col=level.colors[5], lwd=2,lend=0, ljoin=0,xpd=T)
par(lend=1)
# legend("topleft", legend=c(paste0("All dates\n(n = ",sum(counts[1:3,]),")"), paste0("Cutting & \nnear-cutting\n(n = ",sum(counts[1:2,]),")"),paste0("Cutting \ndates\n(n = ",sum(counts[1,]),")")), col=rev(level.colors[c(2,4,6)]), lwd=10, bty='n',y.intersp=2, cex=0.9)
# legend("topleft", legend=c("\n","\n\n","\n\n"), col=rev(level.colors[c(1,3,5)]), lwd=2, bty='n',y.intersp=2, cex=0.9)
par(lend=0)
axis(1, at=c(seq(500,1540,100),1540), labels=c(seq(500,1540,100),1540))
axis(2)
mtext("Number of dates", side=2, line=2.25)
mtext("Year AD", side=1, line=2.25)
par(mai=c(margins,margins,0.15,0.15), new=T, xpd=F)
plot(1, type='n', xaxs="i",yaxs="i", xlab="", ylab="", ylim=c(0,1),xlim=c(500,1540), axes=FALSE, main='')
abline(v=pueblo.period.breaks[c(-1,-6)], lwd=1, lty=2)
text(x=diff(pueblo.period.breaks)/2 + pueblo.period.breaks[-6],y=par('usr')[4],labels=c("BMIII","PI","PII","PIII","PIV"),adj=c(0.5,0), xpd=T)
dev.off()
distill("../FIGURES/EVERYTHING.pdf")
# A final graph of the mean of the series through time, with a smoothing spline
quartz(file="../FIGURES/EVERYTHING.pdf", width=fig.width, height=fig.height, antialias=FALSE, bg="white", type='pdf', family="Gulim", pointsize=8, dpi=600)
par(bg='white',fg='black',col.lab='black', col.main='black', col.axis='black', family='Helvetica Bold', lend=0, ljoin=1)
par(mai=c(margins,margins,0.15,0.15))
plot(1, type='n', xaxs="i",yaxs="i", xlab="", ylab="", ylim=c(0,1),xlim=c(500,1540), axes=FALSE, main='')
# abline(v=pueblo.period.breaks, lwd=1, lty=2)
# text(x=diff(c(0,pueblo.period.breaks,2000))/2 + c(0,pueblo.period.breaks),y=par('usr')[4],labels=c("BMII","BMIII","PI","PII","PIII","PIV","Colonial"),adj=c(0.5,0.5), xpd=T)
par(mai=c(3.6,margins, 0.15, 0.15), new=T, xpd=F)
align <- "center"
plot(1, type='n', ylim=c(0,1), xlim=c(500,1540), axes=F, xaxs='i', yaxs='i', xlab='', ylab='')
lines(x=500:1540, y=as.numeric(colMeans(all.niche.points@data))[500:1540], col="gray70", lwd=0.25)
# lines(x=1:2000,y=my.running(as.numeric(colMeans(all.niche.points@data)), fun=mean, width=11, align=align, pad=T), col=level.colors[1], lwd=2,lend=0, ljoin=0)
lines(x=500:1540,y=my.running(as.numeric(colMeans(all.niche.points@data)), fun=mean, width=21, align=align, pad=T)[500:1540], col="black", lwd=1.5,lend=0, ljoin=0)
# lines(x=1:2000,y=my.running(as.numeric(colMeans(all.niche.points@data)), fun=mean, width=101, align=align, pad=T), col=level.colors[5], lwd=2,lend=0, ljoin=0)
axis(1, at=c(seq(500,1540,100),1540), labels=c(seq(500,1540,100),1540))
axis(2)
mtext("Percent in niche", side=2, line=2.25)
par(mai=c(1.8,margins,1.8, 0.15), new=T, xpd=F)
align <- "center"
plot(1, type='n', ylim=c(0,1), xlim=c(500,1540), axes=F, xaxs='i', yaxs='i', xlab='', ylab='')
lines(x=strictly.local.niche.data[["YEAR"]][500:1540],y=strictly.local.niche.data[["NICHE"]][500:1540], col="gray70", lwd=0.25)
# lines(x=1:2000,y=my.running(as.numeric(colMeans(all.niche.points@data)), fun=mean, width=11, align=align, pad=T), col=level.colors[1], lwd=2,lend=0, ljoin=0)
lines(x=strictly.local.niche.data[["YEAR"]][500:1540],y=my.running(strictly.local.niche.data[["NICHE"]], fun=mean, width=21, align=align, pad=T, na.rm=T)[500:1540], col="black", lwd=1.5,lend=0, ljoin=0)
# lines(x=1:2000,y=my.running(as.numeric(colMeans(all.niche.points@data)), fun=mean, width=101, align=align, pad=T), col=level.colors[5], lwd=2,lend=0, ljoin=0)
axis(1, at=c(seq(500,1540,100),1540), labels=c(seq(500,1540,100),1540))
axis(2)
mtext("Local percent in niche", side=2, line=2.25)
par(mai=c(margins,margins, 3.6, 0.15), new=T, xpd=F)
plot(1, type='n', ylim=c(0,max(densi[500:1540])), xlim=c(500,1540), axes=F, xaxs='i', yaxs='i', xlab='', ylab='')
# barplot(counts, width=1, space=0, col=level.colors[c(2,4,6)], border=NA, xlim=c(0,2000), axes=F, xaxs='i', yaxs='i', xlab='', ylab='', add=T)
lines(x=500:1540,y=densi[500:1540], col=level.colors[5], lwd=2,lend=0, ljoin=0,xpd=T)
par(lend=1)
# legend("topleft", legend=c(paste0("All dates\n(n = ",sum(counts[1:3,]),")"), paste0("Cutting & \nnear-cutting\n(n = ",sum(counts[1:2,]),")"),paste0("Cutting \ndates\n(n = ",sum(counts[1,]),")")), col=rev(level.colors[c(2,4,6)]), lwd=10, bty='n',y.intersp=2, cex=0.9)
# legend("topleft", legend=c("\n","\n\n","\n\n"), col=rev(level.colors[c(1,3,5)]), lwd=2, bty='n',y.intersp=2, cex=0.9)
par(lend=0)
axis(1, at=c(seq(500,1540,100),1540), labels=c(seq(500,1540,100),1540))
axis(2)
mtext("Number of dates", side=2, line=2.25)
mtext("Year AD", side=1, line=2.25)
par(mai=c(margins,margins,0.15,0.15), new=T, xpd=F)
plot(1, type='n', xaxs="i",yaxs="i", xlab="", ylab="", ylim=c(0,1),xlim=c(500,1540), axes=FALSE, main='')
abline(v=pueblo.period.breaks[c(-1,-6)], lwd=1, lty=2)
text(x=diff(pueblo.period.breaks)/2 + pueblo.period.breaks[-6],y=par('usr')[4],labels=c("BMIII","PI","PII","PIII","PIV"),adj=c(0.5,0), xpd=T)
dev.off()
distill("../FIGURES/EVERYTHING.pdf")
counts <- sites.stratum[, hist(as.numeric(CORRECTED_DATE), breaks=1:2000, plot=F)$counts]
counts
binned <- sites.stratum[, hist(as.numeric(CORRECTED_DATE), breaks=c(1,sort(unlist(union(POP_VEPIIN[1,-1],POP_VEPIIN[2,-1]))),2000), plot=F)$counts][c(-1,-(length(POP_VEPIIN[1,-1])+2))]
binned
stratum
stratum <- "Dolores"
sites.stratum <- VEPIIN.dates[[stratum]]
densi.bandwith <- 10
level.colors <- c("#1f78b4","#a6cee3","#ff7f00","#fdbf6f","#e31a1c","#fb9a99")
counts <- sites.stratum[, hist(as.numeric(CORRECTED_DATE), breaks=1:2000, plot=F)$counts]
densi <- sites.stratum[, density(as.numeric(CORRECTED_DATE), from=1, to=2000, n=2000, bw=densi.bandwith)$y * nrow(sites.stratum)]
binned <- sites.stratum[, hist(as.numeric(CORRECTED_DATE), breaks=c(1,sort(unlist(union(POP_VEPIIN[1,-1],POP_VEPIIN[2,-1]))),2000), plot=F)$counts][c(-1,-(length(POP_VEPIIN[1,-1])+2))]
binned <- binned/(as.numeric(POP_VEPIIN[2,-1])-as.numeric(POP_VEPIIN[1,-1]))
binned
binned
as.numeric(POP_VEPIIN[1,-1]))
as.numeric(POP_VEPIIN[1,-1])
(as.numeric(POP_VEPIIN[2,-1])-as.numeric(POP_VEPIIN[1,-1]))
binned
sites.stratum[, hist(as.numeric(CORRECTED_DATE), breaks=c(1,sort(unlist(union(POP_VEPIIN[1,-1],POP_VEPIIN[2,-1]))),2000), plot=F)$counts]
c(-1,-(length(POP_VEPIIN[1,-1])+2))
binned <- sites.stratum[, hist(as.numeric(CORRECTED_DATE), breaks=c(1,sort(unlist(union(POP_VEPIIN[1,-1],POP_VEPIIN[2,-1]))),2000), plot=F)$counts][c(-1,-(length(POP_VEPIIN[1,-1])+2))]
binned
binned <- binned/(as.numeric(POP_VEPIIN[2,-1])-as.numeric(POP_VEPIIN[1,-1]))
binned
r2 <- cor(as.numeric(POP_VEPIIN[POP_VEPIIN$Stratum==stratum,-1]),binned)^2
r2
legend("topleft", legend=c(paste0("Dates\n(total n = ",sum(counts),")"),"Population"), col=level.colors[c(5,1)], lwd=2, bty='n',y.intersp=2, cex=0.9)
lapply(names(VEPIIN.dates), function(stratum){
sites.stratum <- VEPIIN.dates[[stratum]]
densi.bandwith <- 10
level.colors <- c("#1f78b4","#a6cee3","#ff7f00","#fdbf6f","#e31a1c","#fb9a99")
counts <- sites.stratum[, hist(as.numeric(CORRECTED_DATE), breaks=1:2000, plot=F)$counts]
densi <- sites.stratum[, density(as.numeric(CORRECTED_DATE), from=1, to=2000, n=2000, bw=densi.bandwith)$y * nrow(sites.stratum)]
binned <- sites.stratum[, hist(as.numeric(CORRECTED_DATE), breaks=c(1,sort(unlist(union(POP_VEPIIN[1,-1],POP_VEPIIN[2,-1]))),2000), plot=F)$counts][c(-1,-(length(POP_VEPIIN[1,-1])+2))]
binned <- binned/(as.numeric(POP_VEPIIN[2,-1])-as.numeric(POP_VEPIIN[1,-1]))
r2 <- cor(as.numeric(POP_VEPIIN[POP_VEPIIN$Stratum==stratum,-1]),binned)^2
phi <- (1+sqrt(5))/2
mai <- c(0.25,0.25,0,0)
fig.width <- 4.75
fig.height <- fig.width/phi
margins <- 0.5
plot.height <- (fig.height-(margins*1.25))
legend.cex <- 0.75
# A final graph of the mean of the series through time, with a smoothing spline
quartz(file=paste0("../FIGURES/VEP_COMPARE_",stratum,".pdf"), width=fig.width, height=fig.height, antialias=FALSE, bg="white", type='pdf', family="Gulim", pointsize=8, dpi=600)
par(bg='white',fg='black',col.lab='black', col.main='black', col.axis='black', family='Helvetica Bold', lend="round", ljoin='round')
par(mai=c(margins,margins*1.25,margins*0.5,margins*1.25), xpd=T)
xlim <- c(min(as.numeric(POP_VEPIIN[1,-1])),max(as.numeric(POP_VEPIIN[2,-1])))
plot(1, type='n', ylim=c(0,max(binned)), xlim=xlim, axes=F, xaxs='i', yaxs='i', xlab='', ylab='')
# barplot(counts, width=1, space=0, col=level.colors[c(2,4,6)], border=NA, xlim=c(0,2000), axes=F, xaxs='i', yaxs='i', xlab='', ylab='', add=T)
lines(x=sort(c(as.numeric(POP_VEPIIN[2,-1]),as.numeric(POP_VEPIIN[1,-1]))), y=rep(binned[3,],each=2),col=level.colors[5], lwd=2)
# lines(x=sort(c(as.numeric(POP_VEPIIN[2,-1]),as.numeric(POP_VEPIIN[1,-1]))), y=rep(binned[2,],each=2),col=level.colors[3], lwd=2)
# lines(x=sort(c(as.numeric(POP_VEPIIN[2,-1]),as.numeric(POP_VEPIIN[1,-1]))), y=rep(binned[1,],each=2),col=level.colors[1], lwd=2)
par(lend=1)
# legend("topleft", legend=c(paste0("All dates\n(n = ",sum(counts[1:3,]),")"), paste0("Cutting & \nnear-cutting\n(n = ",sum(counts[1:2,]),")"),paste0("Cutting \ndates\n(n = ",sum(counts[1,]),")")), col=rev(level.colors[c(2,4,6)]), lwd=10, bty='n',y.intersp=2, cex=0.9)
# legend("topleft", legend=c(paste0("All dates\n(n = ",sum(counts[1:3,]),")"), paste0("Cutting & \nnear-cutting\n(n = ",sum(counts[1:2,]),")"),paste0("Cutting \ndates\n(n = ",sum(counts[1,]),")")), col=rev(level.colors[c(1,3,5)]), lwd=2, bty='n',y.intersp=2, cex=0.9)
legend("topleft", legend=c(paste0("Dates\n(total n = ",sum(counts),")"),"Population"), col=level.colors[c(5,1)], lwd=2, bty='n',y.intersp=2, cex=0.9)
par(lend=0)
axis(1, at=unique(c(seq(xlim[1],xlim[2],100),xlim[2])), labels=unique(c(seq(xlim[1],xlim[2],100),xlim[2])))
axis(2)
mtext("Average number of dates", side=2, line=3, cex=1.4)
mtext("Year AD", side=1, line=2.5, cex=1.4)
mtext(paste0(stratum, " (r^2 = ",round(r2, digits=2),")"), side=3, line=0.5, cex=1.4)
par(mai=c(margins,margins*1.25,margins*0.5,margins*1.25), xpd=T, new=T)
plot(1, type='n', ylim=c(0,max(POP_VEPIIN[POP_VEPIIN$Stratum==stratum,-1])), xlim=xlim, axes=F, xaxs='i', yaxs='i', xlab='', ylab='')
lines(x=sort(c(as.numeric(POP_VEPIIN[2,-1]),as.numeric(POP_VEPIIN[1,-1]))),y=rep(as.numeric(POP_VEPIIN[POP_VEPIIN$Stratum==stratum,-1]),each=2),col=level.colors[1], lwd=1)
axis(4)
mtext("Population", side=4, line=3, cex=1.4,las=0)
dev.off()
})
lapply(names(VEPIIN.dates), function(stratum){
sites.stratum <- VEPIIN.dates[[stratum]]
densi.bandwith <- 10
level.colors <- c("#1f78b4","#a6cee3","#ff7f00","#fdbf6f","#e31a1c","#fb9a99")
counts <- sites.stratum[, hist(as.numeric(CORRECTED_DATE), breaks=1:2000, plot=F)$counts]
densi <- sites.stratum[, density(as.numeric(CORRECTED_DATE), from=1, to=2000, n=2000, bw=densi.bandwith)$y * nrow(sites.stratum)]
binned <- sites.stratum[, hist(as.numeric(CORRECTED_DATE), breaks=c(1,sort(unlist(union(POP_VEPIIN[1,-1],POP_VEPIIN[2,-1]))),2000), plot=F)$counts][c(-1,-(length(POP_VEPIIN[1,-1])+2))]
binned <- binned/(as.numeric(POP_VEPIIN[2,-1])-as.numeric(POP_VEPIIN[1,-1]))
r2 <- cor(as.numeric(POP_VEPIIN[POP_VEPIIN$Stratum==stratum,-1]),binned)^2
phi <- (1+sqrt(5))/2
mai <- c(0.25,0.25,0,0)
fig.width <- 4.75
fig.height <- fig.width/phi
margins <- 0.5
plot.height <- (fig.height-(margins*1.25))
legend.cex <- 0.75
# A final graph of the mean of the series through time, with a smoothing spline
quartz(file=paste0("../FIGURES/VEP_COMPARE_",stratum,".pdf"), width=fig.width, height=fig.height, antialias=FALSE, bg="white", type='pdf', family="Gulim", pointsize=8, dpi=600)
par(bg='white',fg='black',col.lab='black', col.main='black', col.axis='black', family='Helvetica Bold', lend="round", ljoin='round')
par(mai=c(margins,margins*1.25,margins*0.5,margins*1.25), xpd=T)
xlim <- c(min(as.numeric(POP_VEPIIN[1,-1])),max(as.numeric(POP_VEPIIN[2,-1])))
plot(1, type='n', ylim=c(0,max(binned)), xlim=xlim, axes=F, xaxs='i', yaxs='i', xlab='', ylab='')
# barplot(counts, width=1, space=0, col=level.colors[c(2,4,6)], border=NA, xlim=c(0,2000), axes=F, xaxs='i', yaxs='i', xlab='', ylab='', add=T)
lines(x=sort(c(as.numeric(POP_VEPIIN[2,-1]),as.numeric(POP_VEPIIN[1,-1]))), y=rep(binned,each=2),col=level.colors[5], lwd=2)
# lines(x=sort(c(as.numeric(POP_VEPIIN[2,-1]),as.numeric(POP_VEPIIN[1,-1]))), y=rep(binned[2,],each=2),col=level.colors[3], lwd=2)
# lines(x=sort(c(as.numeric(POP_VEPIIN[2,-1]),as.numeric(POP_VEPIIN[1,-1]))), y=rep(binned[1,],each=2),col=level.colors[1], lwd=2)
par(lend=1)
# legend("topleft", legend=c(paste0("All dates\n(n = ",sum(counts[1:3,]),")"), paste0("Cutting & \nnear-cutting\n(n = ",sum(counts[1:2,]),")"),paste0("Cutting \ndates\n(n = ",sum(counts[1,]),")")), col=rev(level.colors[c(2,4,6)]), lwd=10, bty='n',y.intersp=2, cex=0.9)
# legend("topleft", legend=c(paste0("All dates\n(n = ",sum(counts[1:3,]),")"), paste0("Cutting & \nnear-cutting\n(n = ",sum(counts[1:2,]),")"),paste0("Cutting \ndates\n(n = ",sum(counts[1,]),")")), col=rev(level.colors[c(1,3,5)]), lwd=2, bty='n',y.intersp=2, cex=0.9)
legend("topleft", legend=c(paste0("Dates\n(total n = ",sum(counts),")"),"Population"), col=level.colors[c(5,1)], lwd=2, bty='n',y.intersp=2, cex=0.9)
par(lend=0)
axis(1, at=unique(c(seq(xlim[1],xlim[2],100),xlim[2])), labels=unique(c(seq(xlim[1],xlim[2],100),xlim[2])))
axis(2)
mtext("Average number of dates", side=2, line=3, cex=1.4)
mtext("Year AD", side=1, line=2.5, cex=1.4)
mtext(paste0(stratum, " (r^2 = ",round(r2, digits=2),")"), side=3, line=0.5, cex=1.4)
par(mai=c(margins,margins*1.25,margins*0.5,margins*1.25), xpd=T, new=T)
plot(1, type='n', ylim=c(0,max(POP_VEPIIN[POP_VEPIIN$Stratum==stratum,-1])), xlim=xlim, axes=F, xaxs='i', yaxs='i', xlab='', ylab='')
lines(x=sort(c(as.numeric(POP_VEPIIN[2,-1]),as.numeric(POP_VEPIIN[1,-1]))),y=rep(as.numeric(POP_VEPIIN[POP_VEPIIN$Stratum==stratum,-1]),each=2),col=level.colors[1], lwd=1)
axis(4)
mtext("Population", side=4, line=3, cex=1.4,las=0)
dev.off()
})
VEPIIN.dates
sites.VEPIIN <- rbindlist(VEPIIN.dates)
POP_VEPIIN
colSums(POP_VEPIIN[c(-1,-2,-3),-1])
sites.VEPIIN <- rbindlist(VEPIIN.dates)
level.colors <- c("#1f78b4","#a6cee3","#ff7f00","#fdbf6f","#e31a1c","#fb9a99")
counts <- sites.VEPIIN[, hist(as.numeric(CORRECTED_DATE), breaks=1:2000, plot=F)$counts]
binned <- sites.VEPIIN[, hist(as.numeric(CORRECTED_DATE), breaks=c(1,sort(unlist(union(POP_VEPIIN[1,-1],POP_VEPIIN[2,-1]))),2000), plot=F)$counts][c(-1,-(length(POP_VEPIIN[1,-1])+2))]
binned <- binned/(as.numeric(POP_VEPIIN[2,-1])-as.numeric(POP_VEPIIN[1,-1]))
r2 <- cor(as.numeric(colSums(POP_VEPIIN[c(-1,-2,-3),-1])),binned)^2
r2
phi <- (1+sqrt(5))/2
mai <- c(0.25,0.25,0,0)
fig.width <- 4.75
fig.height <- fig.width/phi
margins <- 0.5
plot.height <- (fig.height-(margins*1.25))
legend.cex <- 0.75
# A final graph of the mean of the series through time, with a smoothing spline
quartz(file="../FIGURES/VEP_COMPARE_ALL.pdf", width=fig.width, height=fig.height, antialias=FALSE, bg="white", type='pdf', family="Gulim", pointsize=8, dpi=600)
par(bg='white',fg='black',col.lab='black', col.main='black', col.axis='black', family='Helvetica Bold', lend="round", ljoin='round')
par(mai=c(margins,margins*1.25,margins*0.5,margins*1.25), xpd=T)
xlim <- c(min(as.numeric(POP_VEPIIN[1,-1])),max(as.numeric(POP_VEPIIN[2,-1])))
plot(1, type='n', ylim=c(0,max(binned)), xlim=xlim, axes=F, xaxs='i', yaxs='i', xlab='', ylab='')
# barplot(counts, width=1, space=0, col=level.colors[c(2,4,6)], border=NA, xlim=c(0,2000), axes=F, xaxs='i', yaxs='i', xlab='', ylab='', add=T)
lines(x=sort(c(as.numeric(POP_VEPIIN[2,-1]),as.numeric(POP_VEPIIN[1,-1]))), y=rep(binned,each=2),col=level.colors[5], lwd=2)
# lines(x=sort(c(as.numeric(POP_VEPIIN[2,-1]),as.numeric(POP_VEPIIN[1,-1]))), y=rep(binned[2,],each=2),col=level.colors[3], lwd=2)
# lines(x=sort(c(as.numeric(POP_VEPIIN[2,-1]),as.numeric(POP_VEPIIN[1,-1]))), y=rep(binned[1,],each=2),col=level.colors[1], lwd=2)
par(lend=1)
# legend("topleft", legend=c(paste0("All dates\n(n = ",sum(counts[1:3,]),")"), paste0("Cutting & \nnear-cutting\n(n = ",sum(counts[1:2,]),")"),paste0("Cutting \ndates\n(n = ",sum(counts[1,]),")")), col=rev(level.colors[c(2,4,6)]), lwd=10, bty='n',y.intersp=2, cex=0.9)
# legend("topleft", legend=c(paste0("All dates\n(n = ",sum(counts[1:3,]),")"), paste0("Cutting & \nnear-cutting\n(n = ",sum(counts[1:2,]),")"),paste0("Cutting \ndates\n(n = ",sum(counts[1,]),")")), col=rev(level.colors[c(1,3,5)]), lwd=2, bty='n',y.intersp=2, cex=0.9)
legend("topleft", legend=c(paste0("Dates\n(total n = ",sum(counts),")"),"Population"), col=level.colors[c(5,1)], lwd=2, bty='n',y.intersp=2, cex=0.9)
par(lend=0)
axis(1, at=unique(c(seq(xlim[1],xlim[2],100),xlim[2])), labels=unique(c(seq(xlim[1],xlim[2],100),xlim[2])))
axis(2)
mtext("Average number of dates", side=2, line=3, cex=1.4)
mtext("Year AD", side=1, line=2.5, cex=1.4)
mtext(paste0(stratum, " (r^2 = ",round(r2, digits=2),")"), side=3, line=0.5, cex=1.4)
par(mai=c(margins,margins*1.25,margins*0.5,margins*1.25), xpd=T, new=T)
plot(1, type='n', ylim=c(0,max(as.numeric(colSums(POP_VEPIIN[c(-1,-2,-3),-1])))), xlim=xlim, axes=F, xaxs='i', yaxs='i', xlab='', ylab='')
lines(x=sort(c(as.numeric(POP_VEPIIN[2,-1]),as.numeric(POP_VEPIIN[1,-1]))),y=rep(as.numeric(colSums(POP_VEPIIN[c(-1,-2,-3),-1])),each=2),col=level.colors[1], lwd=1)
axis(4)
mtext("Population", side=4, line=3, cex=1.4,las=0)
dev.off()
# A final graph of the mean of the series through time, with a smoothing spline
quartz(file="../FIGURES/VEP_COMPARE_ALL.pdf", width=fig.width, height=fig.height, antialias=FALSE, bg="white", type='pdf', family="Gulim", pointsize=8, dpi=600)
par(bg='white',fg='black',col.lab='black', col.main='black', col.axis='black', family='Helvetica Bold', lend="round", ljoin='round')
par(mai=c(margins,margins*1.25,margins*0.5,margins*1.25), xpd=T)
xlim <- c(min(as.numeric(POP_VEPIIN[1,-1])),max(as.numeric(POP_VEPIIN[2,-1])))
plot(1, type='n', ylim=c(0,max(binned)), xlim=xlim, axes=F, xaxs='i', yaxs='i', xlab='', ylab='')
# barplot(counts, width=1, space=0, col=level.colors[c(2,4,6)], border=NA, xlim=c(0,2000), axes=F, xaxs='i', yaxs='i', xlab='', ylab='', add=T)
lines(x=sort(c(as.numeric(POP_VEPIIN[2,-1]),as.numeric(POP_VEPIIN[1,-1]))), y=rep(binned,each=2),col=level.colors[5], lwd=2)
# lines(x=sort(c(as.numeric(POP_VEPIIN[2,-1]),as.numeric(POP_VEPIIN[1,-1]))), y=rep(binned[2,],each=2),col=level.colors[3], lwd=2)
# lines(x=sort(c(as.numeric(POP_VEPIIN[2,-1]),as.numeric(POP_VEPIIN[1,-1]))), y=rep(binned[1,],each=2),col=level.colors[1], lwd=2)
par(lend=1)
# legend("topleft", legend=c(paste0("All dates\n(n = ",sum(counts[1:3,]),")"), paste0("Cutting & \nnear-cutting\n(n = ",sum(counts[1:2,]),")"),paste0("Cutting \ndates\n(n = ",sum(counts[1,]),")")), col=rev(level.colors[c(2,4,6)]), lwd=10, bty='n',y.intersp=2, cex=0.9)
# legend("topleft", legend=c(paste0("All dates\n(n = ",sum(counts[1:3,]),")"), paste0("Cutting & \nnear-cutting\n(n = ",sum(counts[1:2,]),")"),paste0("Cutting \ndates\n(n = ",sum(counts[1,]),")")), col=rev(level.colors[c(1,3,5)]), lwd=2, bty='n',y.intersp=2, cex=0.9)
legend("topleft", legend=c(paste0("Dates\n(total n = ",sum(counts),")"),"Population"), col=level.colors[c(5,1)], lwd=2, bty='n',y.intersp=2, cex=0.9)
par(lend=0)
axis(1, at=unique(c(seq(xlim[1],xlim[2],100),xlim[2])), labels=unique(c(seq(xlim[1],xlim[2],100),xlim[2])))
axis(2)
mtext("Average number of dates", side=2, line=3, cex=1.4)
mtext("Year AD", side=1, line=2.5, cex=1.4)
mtext(paste0("All VEPIIN (r^2 = ",round(r2, digits=2),")"), side=3, line=0.5, cex=1.4)
par(mai=c(margins,margins*1.25,margins*0.5,margins*1.25), xpd=T, new=T)
plot(1, type='n', ylim=c(0,max(as.numeric(colSums(POP_VEPIIN[c(-1,-2,-3),-1])))), xlim=xlim, axes=F, xaxs='i', yaxs='i', xlab='', ylab='')
lines(x=sort(c(as.numeric(POP_VEPIIN[2,-1]),as.numeric(POP_VEPIIN[1,-1]))),y=rep(as.numeric(colSums(POP_VEPIIN[c(-1,-2,-3),-1])),each=2),col=level.colors[1], lwd=1)
axis(4)
mtext("Population", side=4, line=3, cex=1.4,las=0)
dev.off()
# A final graph of the mean of the series through time, with a smoothing spline
quartz(file="../FIGURES/VEP_COMPARE_ALL.pdf", width=fig.width, height=fig.height, antialias=FALSE, bg="white", type='pdf', family="Gulim", pointsize=8, dpi=600)
par(bg='white',fg='black',col.lab='black', col.main='black', col.axis='black', family='Helvetica Bold', lend="round", ljoin='round')
par(mai=c(margins,margins*1.25,margins*0.5,margins*1.25), xpd=T)
xlim <- c(min(as.numeric(POP_VEPIIN[1,-1])),max(as.numeric(POP_VEPIIN[2,-1])))
plot(1, type='n', ylim=c(0,max(binned)), xlim=xlim, axes=F, xaxs='i', yaxs='i', xlab='', ylab='')
# barplot(counts, width=1, space=0, col=level.colors[c(2,4,6)], border=NA, xlim=c(0,2000), axes=F, xaxs='i', yaxs='i', xlab='', ylab='', add=T)
lines(x=sort(c(as.numeric(POP_VEPIIN[2,-1]),as.numeric(POP_VEPIIN[1,-1]))), y=rep(binned,each=2),col=level.colors[5], lwd=2)
# lines(x=sort(c(as.numeric(POP_VEPIIN[2,-1]),as.numeric(POP_VEPIIN[1,-1]))), y=rep(binned[2,],each=2),col=level.colors[3], lwd=2)
# lines(x=sort(c(as.numeric(POP_VEPIIN[2,-1]),as.numeric(POP_VEPIIN[1,-1]))), y=rep(binned[1,],each=2),col=level.colors[1], lwd=2)
par(lend=1)
# legend("topleft", legend=c(paste0("All dates\n(n = ",sum(counts[1:3,]),")"), paste0("Cutting & \nnear-cutting\n(n = ",sum(counts[1:2,]),")"),paste0("Cutting \ndates\n(n = ",sum(counts[1,]),")")), col=rev(level.colors[c(2,4,6)]), lwd=10, bty='n',y.intersp=2, cex=0.9)
# legend("topleft", legend=c(paste0("All dates\n(n = ",sum(counts[1:3,]),")"), paste0("Cutting & \nnear-cutting\n(n = ",sum(counts[1:2,]),")"),paste0("Cutting \ndates\n(n = ",sum(counts[1,]),")")), col=rev(level.colors[c(1,3,5)]), lwd=2, bty='n',y.intersp=2, cex=0.9)
legend("topleft", legend=c(paste0("Dates\n(total n = ",sum(counts),")"),"Population"), col=level.colors[c(5,1)], lwd=2, bty='n',y.intersp=2, cex=0.9)
par(lend=0)
axis(1, at=unique(c(seq(xlim[1],xlim[2],100),xlim[2])), labels=unique(c(seq(xlim[1],xlim[2],100),xlim[2])))
axis(2)
mtext("Average number of dates", side=2, line=3, cex=1.4)
mtext("Year AD", side=1, line=2.5, cex=1.4)
mtext(paste0("All VEPIIN (r^2 = ",round(r2, digits=2),")"), side=3, line=0.5, cex=1.4)
par(mai=c(margins,margins*1.25,margins*0.5,margins*1.25), xpd=T, new=T)
plot(1, type='n', ylim=c(0,max(as.numeric(colSums(POP_VEPIIN[c(-1,-2,-3),-1])))), xlim=xlim, axes=F, xaxs='i', yaxs='i', xlab='', ylab='')
lines(x=sort(c(as.numeric(POP_VEPIIN[2,-1]),as.numeric(POP_VEPIIN[1,-1]))),y=rep(as.numeric(colSums(POP_VEPIIN[c(-1,-2,-3),-1])),each=2),col=level.colors[1], lwd=1)
axis(4)
mtext("Population", side=4, line=3, cex=1.4,las=0)
dev.off()
sites.VEPIIS <- rbindlist(VEPIIS.dates)
level.colors <- c("#1f78b4","#a6cee3","#ff7f00","#fdbf6f","#e31a1c","#fb9a99")
counts <- sites.VEPIIS[, hist(as.numeric(CORRECTED_DATE), breaks=1:2000, plot=F)$counts]
binned <- sites.VEPIIS[, hist(as.numeric(CORRECTED_DATE), breaks=c(1,sort(unlist(union(POP_VEPIIS[1,-1],POP_VEPIIS[2,-1]))),2000), plot=F)$counts][c(-1,-(length(POP_VEPIIS[1,-1])+2))]
binned <- binned/(as.numeric(POP_VEPIIS[2,-1])-as.numeric(POP_VEPIIS[1,-1]))
r2 <- cor(as.numeric(colSums(POP_VEPIIS[c(-1,-2,-3),-1])),binned)^2
phi <- (1+sqrt(5))/2
mai <- c(0.25,0.25,0,0)
fig.width <- 4.75
fig.height <- fig.width/phi
margins <- 0.5
plot.height <- (fig.height-(margins*1.25))
legend.cex <- 0.75
# A final graph of the mean of the series through time, with a smoothing spline
quartz(file="../FIGURES/VEP_COMPARE_ALL_VEPIIS.pdf", width=fig.width, height=fig.height, antialias=FALSE, bg="white", type='pdf', family="Gulim", pointsize=8, dpi=600)
par(bg='white',fg='black',col.lab='black', col.main='black', col.axis='black', family='Helvetica Bold', lend="round", ljoin='round')
par(mai=c(margins,margins*1.25,margins*0.5,margins*1.25), xpd=T)
xlim <- c(min(as.numeric(POP_VEPIIS[1,-1])),max(as.numeric(POP_VEPIIS[2,-1])))
plot(1, type='n', ylim=c(0,max(binned)), xlim=xlim, axes=F, xaxs='i', yaxs='i', xlab='', ylab='')
# barplot(counts, width=1, space=0, col=level.colors[c(2,4,6)], border=NA, xlim=c(0,2000), axes=F, xaxs='i', yaxs='i', xlab='', ylab='', add=T)
lines(x=sort(c(as.numeric(POP_VEPIIS[2,-1]),as.numeric(POP_VEPIIS[1,-1]))), y=rep(binned,each=2),col=level.colors[5], lwd=2)
# lines(x=sort(c(as.numeric(POP_VEPIIS[2,-1]),as.numeric(POP_VEPIIS[1,-1]))), y=rep(binned[2,],each=2),col=level.colors[3], lwd=2)
# lines(x=sort(c(as.numeric(POP_VEPIIS[2,-1]),as.numeric(POP_VEPIIS[1,-1]))), y=rep(binned[1,],each=2),col=level.colors[1], lwd=2)
par(lend=1)
# legend("topleft", legend=c(paste0("All dates\n(n = ",sum(counts[1:3,]),")"), paste0("Cutting & \nnear-cutting\n(n = ",sum(counts[1:2,]),")"),paste0("Cutting \ndates\n(n = ",sum(counts[1,]),")")), col=rev(level.colors[c(2,4,6)]), lwd=10, bty='n',y.intersp=2, cex=0.9)
# legend("topleft", legend=c(paste0("All dates\n(n = ",sum(counts[1:3,]),")"), paste0("Cutting & \nnear-cutting\n(n = ",sum(counts[1:2,]),")"),paste0("Cutting \ndates\n(n = ",sum(counts[1,]),")")), col=rev(level.colors[c(1,3,5)]), lwd=2, bty='n',y.intersp=2, cex=0.9)
legend("topleft", legend=c(paste0("Dates\n(total n = ",sum(counts),")"),"Population"), col=level.colors[c(5,1)], lwd=2, bty='n',y.intersp=2, cex=0.9)
par(lend=0)
axis(1, at=unique(c(seq(xlim[1],xlim[2],100),xlim[2])), labels=unique(c(seq(xlim[1],xlim[2],100),xlim[2])))
axis(2)
mtext("Average number of dates", side=2, line=3, cex=1.4)
mtext("Year AD", side=1, line=2.5, cex=1.4)
mtext(paste0("All VEPIIS (r^2 = ",round(r2, digits=2),")"), side=3, line=0.5, cex=1.4)
par(mai=c(margins,margins*1.25,margins*0.5,margins*1.25), xpd=T, new=T)
plot(1, type='n', ylim=c(0,max(as.numeric(colSums(POP_VEPIIS[c(-1,-2,-3),-1])))), xlim=xlim, axes=F, xaxs='i', yaxs='i', xlab='', ylab='')
lines(x=sort(c(as.numeric(POP_VEPIIS[2,-1]),as.numeric(POP_VEPIIS[1,-1]))),y=rep(as.numeric(colSums(POP_VEPIIS[c(-1,-2,-3),-1])),each=2),col=level.colors[1], lwd=1)
axis(4)
mtext("Population", side=4, line=3, cex=1.4,las=0)
dev.off()
sites.VEPIIN <- rbindlist(VEPIIN.dates)
level.colors <- c("#1f78b4","#a6cee3","#ff7f00","#fdbf6f","#e31a1c","#fb9a99")
counts <- sites.VEPIIN[, hist(as.numeric(CORRECTED_DATE), breaks=1:2000, plot=F)$counts]
binned <- sites.VEPIIN[, hist(as.numeric(CORRECTED_DATE), breaks=c(1,sort(unlist(union(POP_VEPIIN[1,-1],POP_VEPIIN[2,-1]))),2000), plot=F)$counts][c(-1,-(length(POP_VEPIIN[1,-1])+2))]
binned <- binned/(as.numeric(POP_VEPIIN[2,-1])-as.numeric(POP_VEPIIN[1,-1]))
r2 <- cor(as.numeric(colSums(POP_VEPIIN[c(-1,-2,-3),-1])),binned)^2
phi <- (1+sqrt(5))/2
mai <- c(0.25,0.25,0,0)
fig.width <- 4.75
fig.height <- fig.width/phi
margins <- 0.5
plot.height <- (fig.height-(margins*1.25))
legend.cex <- 0.75
# A final graph of the mean of the series through time, with a smoothing spline
quartz(file="../FIGURES/VEP_COMPARE_ALL_VEPIIN.pdf", width=fig.width, height=fig.height, antialias=FALSE, bg="white", type='pdf', family="Gulim", pointsize=8, dpi=600)
par(bg='white',fg='black',col.lab='black', col.main='black', col.axis='black', family='Helvetica Bold', lend="round", ljoin='round')
par(mai=c(margins,margins*1.25,margins*0.5,margins*1.25), xpd=T)
xlim <- c(min(as.numeric(POP_VEPIIN[1,-1])),max(as.numeric(POP_VEPIIN[2,-1])))
plot(1, type='n', ylim=c(0,max(binned)), xlim=xlim, axes=F, xaxs='i', yaxs='i', xlab='', ylab='')
# barplot(counts, width=1, space=0, col=level.colors[c(2,4,6)], border=NA, xlim=c(0,2000), axes=F, xaxs='i', yaxs='i', xlab='', ylab='', add=T)
lines(x=sort(c(as.numeric(POP_VEPIIN[2,-1]),as.numeric(POP_VEPIIN[1,-1]))), y=rep(binned,each=2),col=level.colors[5], lwd=2)
# lines(x=sort(c(as.numeric(POP_VEPIIN[2,-1]),as.numeric(POP_VEPIIN[1,-1]))), y=rep(binned[2,],each=2),col=level.colors[3], lwd=2)
# lines(x=sort(c(as.numeric(POP_VEPIIN[2,-1]),as.numeric(POP_VEPIIN[1,-1]))), y=rep(binned[1,],each=2),col=level.colors[1], lwd=2)
par(lend=1)
# legend("topleft", legend=c(paste0("All dates\n(n = ",sum(counts[1:3,]),")"), paste0("Cutting & \nnear-cutting\n(n = ",sum(counts[1:2,]),")"),paste0("Cutting \ndates\n(n = ",sum(counts[1,]),")")), col=rev(level.colors[c(2,4,6)]), lwd=10, bty='n',y.intersp=2, cex=0.9)
# legend("topleft", legend=c(paste0("All dates\n(n = ",sum(counts[1:3,]),")"), paste0("Cutting & \nnear-cutting\n(n = ",sum(counts[1:2,]),")"),paste0("Cutting \ndates\n(n = ",sum(counts[1,]),")")), col=rev(level.colors[c(1,3,5)]), lwd=2, bty='n',y.intersp=2, cex=0.9)
legend("topleft", legend=c(paste0("Dates\n(total n = ",sum(counts),")"),"Population"), col=level.colors[c(5,1)], lwd=2, bty='n',y.intersp=2, cex=0.9)
par(lend=0)
axis(1, at=unique(c(seq(xlim[1],xlim[2],100),xlim[2])), labels=unique(c(seq(xlim[1],xlim[2],100),xlim[2])))
axis(2)
mtext("Average number of dates", side=2, line=3, cex=1.4)
mtext("Year AD", side=1, line=2.5, cex=1.4)
mtext(paste0("All VEPIIN (r^2 = ",round(r2, digits=2),")"), side=3, line=0.5, cex=1.4)
par(mai=c(margins,margins*1.25,margins*0.5,margins*1.25), xpd=T, new=T)
plot(1, type='n', ylim=c(0,max(as.numeric(colSums(POP_VEPIIN[c(-1,-2,-3),-1])))), xlim=xlim, axes=F, xaxs='i', yaxs='i', xlab='', ylab='')
lines(x=sort(c(as.numeric(POP_VEPIIN[2,-1]),as.numeric(POP_VEPIIN[1,-1]))),y=rep(as.numeric(colSums(POP_VEPIIN[c(-1,-2,-3),-1])),each=2),col=level.colors[1], lwd=1)
axis(4)
mtext("Population", side=4, line=3, cex=1.4,las=0)
dev.off()
